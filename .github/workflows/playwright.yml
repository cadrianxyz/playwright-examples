name: Playwright Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  test-conditionals:
    name: Test Conditionals
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check.outputs.should-run }}
    steps:
      - id: check
        run: |
          if [[ ${{
            (
              github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]' ||
              github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]'
            ) && (
              github.event_name == 'pull_request' && !startsWith(github.event.pull_request.title, 'chore(master): release') ||
              github.event_name == 'merge_group' && !startsWith(github.event.merge_group.head_commit.message, 'chore(master): release') ||
              github.event_name == 'push'
            )
          }} == 'true' ]]; then
            echo "should-run=true" >> $GITHUB_OUTPUT
          else
            echo "should-run=false" >> $GITHUB_OUTPUT
          fi
  test:
    needs: [test-conditionals]
    if: needs.test-conditionals.outputs.should-run == 'true'
    strategy:
      matrix:
        shard: 
          [1, 2, 3, 4]
    outputs:
      output_1: ${{ steps.shard-result.outputs.shard_1 }}
      output_2: ${{ steps.shard-result.outputs.shard_2 }}
      output_3: ${{ steps.shard-result.outputs.shard_3 }}
      output_4: ${{ steps.shard-result.outputs.shard_3 }}
    name: 'Playwright Test (Shard ${{ matrix.shard }}/4)'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      id: shard-run
      run: npx playwright test --shard=${{ matrix.shard }}/4
    - name: Output Plawright Results
      if: always()
      id: shard-result
      run: 
        echo "steps.shard-run.outcome:${{ steps.shard-run.outcome }}"
        echo "shard_${{ matrix.shard }}=${{ steps.shard-run.outcome }}" >> "$GITHUB_OUTPUT"
  test-summary:
    name: Playwright Tests Summary
    needs: [test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check test matrix status
        if: needs.test-conditionals.outputs.should-run == 'true' && needs.test.result != 'success'
        run: |
          echo "Some Playwright tests failed"
          exit 1
      - name: Tests skipped or passed
        if: needs.test-conditionals.outputs.should-run != 'true' || needs.test.result == 'success'
        run: |
          echo "Tests either passed or were skipped"
          exit 0